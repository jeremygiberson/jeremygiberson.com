module.exports = [
  {
    "title": "resume",
    "path": "/pages/resume",
    "content": "# Jeremy Giberson
Software developer of **17 years professional experience**. I have a breadth of knowledge in cloud infrastructure and software architecture design and development across many stacks and paradigms but I specialize in Serverless (AWS) and  MERN (Mysql, Express, React, Node) stacks.

## Primary Role - Product Development
From greenfield development to established ecosystems I've been responsible for the gamut of product development responsibilities. I've designed and built cloud infrastructure emphasizing **Infrastructure as Code** to facilitate repeatable and reliable **automated environment provisioning**. I've configured **continuous integration** and **deployment pipelines** to **automate tests**, **code analysis**, and promote code across environments to effect **rapid delivery of software**. I've been the big picture guy, architecting system design and **roadmap development** for both **infrastructure and software architecture**. I've collaborated with business analysts and product owners to focus product design around **customer requirements**.  I've also led teams in **feature development** and implementation. And I've sat in the hot chair cranking out **bug fixes** of critical customer facing issues on red alert teams.


The tools and languages change between roles and technologies, and for sure I've got experience with a lot of the major players. I'll only mention a handful of the most recent ones. Love to hate it, **JIRA** for project management and keeping track of work. **GitHub** to save and collaborate work. **AWS** to provide a home (with all the furnishings and amenities like ever) for the product. Pair **Kafka**, **Node** or **Python**, and **Redis** together for a decent **message processing pipeline** (yay IoT). Grab **MySQL** or **Postgres** for relational data persistence, combine with **Node/Express.js** or **Python/FastApi** for **microservices** to provide **REST APIs**. Don't forget to document those interfaces with **OpenAPI**. Spin up a CDN to deliver a **React/Recoil** frontend that communicates to the backend using a **GraphQL** endpoint. Automate your build (Docker artifacts), test and release processes with **AWS CodeBuild** and **CodePipeline**.  Oh, and the orchestration and configuration of all the above is checked into a git repository because **GitOps** is the key to reviewable, reliable, repeatable, and rapid delivery.


## Secondary Role - Code Quality Zealot
Maybe unintuitively, code quality actually starts with well understood problems. Understanding the what and why we write code is the key to driving good design. That means collaboration is king; with customers, business analysts and product owners to make sure we understand what we're building.  I'm also big on these when it comes to writing code: **Test Driven Design**, **Behavior Driven Design** and **Domain Driven Design**. Apply a healthy portion of **S.O.L.I.D** (I know what this is, really! Ask me) principles when mixing. I'm also in love with static code analysis tools like **Code Climate**, **Code Sniffer**, **Mess Detector** and **Copy Paste Detector**. Pair with automated testing for delicious development. If you're not currently using these, you will be when I'm done.


## Tertiary Role - DevOps Evangelist
Writing software is just part of what I do, I spend quite a bit of time in the hows and whys aspect of the SDLC as well. Formalizing an automated process for provisioning environments, deployments and testing is essential in delivering software reliably. So experience with things like **Docker** or **Serverless** for simple projects, with **ansible** and **CloudFormation** for dealing with big picture infrastructure.


## Quaternary Role (yeah that's a thing) - Agile Process Activist
Good code starts with good product ownership--which is a combined effort of product and development. I embrace the **collaborative process** of working with product owners to turn customer requirements into deliverable value. Toss in some ceremonies to **facilitate communication**, **process improvement** and celebration for good work done.




## Employment
### Formidable (2022-current) - Sr Backend Engineer/Cloud Architect
At Formidable I was staffed on a global e-commerce client project where I was tapped to shepherd the transition from mono repository full stack application/architecture to multiple repository project organization. The reorganization was made to help the client facilitate product management and quality of the Frontend and GraphQL/API layers. The migration was performed in parallel with ongoing feature development w/out inhibiting team delivery velocity. Ultimately the production transition to new dedicated infrastructure was performed transparently and without production down time.

Otherwise, time was spent in open source project research and development. I explored desktop application development with Rust and Tauri as an alternative to Electron application development stack to deliver fast, lightweight, cross platform deliverables.


### Privoro (2017-2022) - Sr Software Engineer/Cloud Architect
At Privoro, I was the lead developer and cloud architect for the cloud software offering (CSO). The CSO is companion software for a physical product (SafeCase). I was instrumental in the design, specification and implementation of the cloud infrastructure and software architecture. I architected (and led the implementation effort) of the solution to support **IoT pipeline** processing -- enabling the ability to react to device status to provide threat mitigation and reporting. Additionally, the CSO provided a customer portal to manage a fleet of IoT devices, set policies, provide reporting of policy violations and real time mapping of device location and status.

My first step was implementing the **provisioning and deployment pipeline** that supported local development, integrated dev and test, and production environments. I focused on eliminating friction of the Software Development Lifecycle to enable devs to move fast.

As team lead I designed the solutions and collaborated with other developers to implement them. I provided **coaching** through code reviews and peer coding exercises as well as providing mentorship for jr developers.

Additionally, I **contributed to the iOS app development** to provide the communication functionality that enabled the SafeCase to establish a proprietary secure transport channel to the cloud. This required writing **bluetooth**  and **tls transport** connection handling libraries in Swift. In order to facilitate testing and development of both cloud and the mobile application, I created a Virtual SafeCases tool. These virtual safecases acted as toolable mock clients for the app and cloud so that we could exercise and stress both sides of the communications interface.

Finally, as cloud architect and team lead I was part of the ongoing process for **FedRAMP certification**. It was my job to be technical advisor for the control documentation efforts. Reviewing over 400 control requirements for technical impact and relevance to the product dev organization to ensure that our AWS GovCloud account and CSO were fit for government consumption.

### Spear Education (2016-2017) - Sr Software Developer/Solution Architect
Brought on last minute to a reporting project due to release in two months my immediate duties involved shoring up the platform and performance for the anticipated release. After bringing the product to an **AWS Infrastructure**, refactoring an **ETL pipeline** for **Big Data**, setting up a **Continuous Integration** release pipeline and optimizing queries the **load time was reduced from 1-2 minutes to 2-3 seconds**. Spear Education successfully met its release date and performance goals. And has continued to meet release goals for new integrations with the product as well as maintain their performance SLAs.

### WebPT (2012-2016) - Sr Software Developer
Spearheaded a support initiative to squash a backlog of product defects, support call volume was **reduced by hundreds of calls per day**. I transitioned to be part of a specialized team that introduced **Multi-tenancy**, **Single-Sign-On** and **Enterprise Service Bus** to an existing product suite  with over 10k customers with 20k concurrent daily users. I introduced **provisioning via Vagrant** and used it to advocate the creation of a DevOps team for continuous integration and deployment efforts. I was recruited into the Tiger team as technical lead where I worked with the company co-founder on an under-the-radar billing product from scratch. I became the technical lead of core product team where we focused on refactoring legacy code while developing new features of the core product platform. And I sat on the architecture council where I was responsible for providing input to define and **direct the software architecture roadmap**.

### Brock Supply Co (2005-2012) - Lead Software Developer
While there I Revolutionized the company website, **doubling gross company sales**. I built a **hosted E-commerce platform** allowing our customers to transparently offer our auto part inventory as their own. I Planned, purchased and installed a quarter million dollar virtualized server architecture to support a new ERP software. I then **learned X++**, the ERP programming language, to develop the Gap Fit modifications in house, in half (700 hrs) the estimated time (1400 hrs) of our implementation vendor's quote **saving over $200k in contracting fees**.

## Education
* Ongoing, Self Education (2004-present) - Internet, Conferences, and User Groups
* Pragmatic Marketing (2010) - Training Course
* MySQL Query Performance & Optimization (2009) - Vendor Training
* Associates, Applied Science (2002-2004) - Glendale Community College




"
  }
]