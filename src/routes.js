module.exports = [
  {
    "title": "New-Copyright-Model--Distribution-oriented",
    "day": "10",
    "month": "09",
    "year": "2009",
    "date": "2009-09-10",
    "path": "/posts/2009/09/10/New-Copyright-Model--Distribution-oriented",
    "content": "I05ldyBDb3B5cmlnaHQgTW9kZWw6IERpc3RyaWJ1dGlvbiBvcmllbnRlZAoKUmVjZW50bHkgd2F0Y2hlZCBhIGRpc2N1c3Npb24gb24gY29weXJpZ2h0IG1vZGVsIGlzc3VlcyBbSEFSIFBhbmVsXShodHRwczovL3ZpbWVvLmNvbS82MTI4MTI0KSBmcm9tIFtUb3JyZW50RnJlYWtdKGh0dHBzOi8vdmltZW8uY29tL3VzZXIyMTc0MDIwKS4gDQoNCkJlbG93IEkgZGVzY3JpYmUgbXkgbmFpdmUgYXBwcm9hY2ggdG8gYSAiZmFpciIgY29weXJpZ2h0IG1vZGVsLiBJIHRoaW5rIHRoaXMgbW9kZWwgcHJvdmlkZXMgdGhlIHJpZ2h0IGJhbGFuY2UgYmV0d2VlbiBkaXN0cmlidXRpb24gYW5kIHByb3RlY3RpbmcgdGhlIGF1dGhvcidzIHJpZ2h0cy4NCg0KIyMjIEEgbmV3IGNvcHlyaWdodCBtb2RlbCANCg0KICAxLiBPbmNlIGNyZWF0ZWQsIGFueSB3b3JrIGF1dG9tYXRpY2FsbHkgYmVjb21lcyBjb3B5cmlnaHQgYnkgdGhlIGF1dGhvci4NCiAgMi4gQ29weXJpZ2h0IG93bmVyc2hpcCBkb2VzIG5vdCwgbm9yIGNhbm5vdCB0cmFuc2Zlci4gT3duZXJzaGlwIGV4aXN0cyBmcm9tIHRoZSB0aW1lIG9mIHRoZSB3b3Jr4oCZcyBjcmVhdGlvbiB0byB0aGUgZGVhdGggb2YgdGhlIGF1dGhvci4NCiAgMy4gQ29weXJpZ2h0IGFmZm9yZHMgdGhlIHJpZ2h0IG9mIHRoZSBhdXRob3IgdG8gYSBtb25ldGFyeSBwZXJjZW50YWdlIChiYXNlZCBvbiB0aGUgcmF0aW8gb2YgY29udHJpYnV0aW9uIGluIGNvbGxlY3Rpb25zIG9mIHdvcmspIG9mIGFueSBpbmNvbWUgZGlyZWN0bHkgYXR0cmlidXRlZCB0byB0aGUgdXNhZ2Ugb3IgZGlzdHJpYnV0aW9uIG9mIG93bmVkIHdvcmsuIFRoZSBkZWZhdWx0IHBlcmNlbnRhZ2UgYW1vdW50IGlzIDI1JS4gSG93ZXZlciwgdGhlIGF1dGhvciBvZiBjb3B5cmlnaHRlZCB3b3JrIG1heSBlbnRlciBpbiB0byBjb250cmFjdHMgd2l0aCBkaXN0cmlidXRvcnMgdGhhdCBhbHRlciB0aGUgZGVmYXVsdCBwZXJjZW50YWdlLg0KICA0LiBDb3B5cmlnaHQgZG9lcyBub3QgZ3JhbnQgdGhlIHJpZ2h0IHRvIHNwZWNpZnkgd2hvIGNhbiBvciBjYW5ub3QgZGlzdHJpYnV0ZSB3b3JrIG9yIGZvciB3aGF0IGFtb3VudCB0aGUgd29yayBpcyBkaXN0cmlidXRlZC4NCiAgNS4gQ29weXJpZ2h0ZWQgd29yayBjYW4gYmUgb2J0YWluZWQsIHVzZWQsIG9yIGRpc3RyaWJ1dGVkIGZvciBmcmVl4oCTc28gbG9uZyBhcyBubyBtb25ldGFyeSBnYWluIGlzIHJlc3VsdGVkIGZyb20gdGhhdCBtYXRlcmlhbC4NCg0KVGhlIGdvYWwgb2YgdGhpcyBjb3B5cmlnaHQgbW9kZWwgaXMgbWVhbnQgdG8gb3BlbiB1cCBjb3B5cmlnaHQgbWF0ZXJpYWwgaW4gYSBmYWlyIGFuZCByZWFzb25hYmxlIHdheSB0byBhbnkgcGFydHkuDQoNCiMjIyBCZW5lZml0cyBmb3IgdGhlIGF1dGhvcg0KDQpCZWluZyBhcyBjb3B5cmlnaHRlZCBtYXRlcmlhbCBjYW4gbm8gbG9uZ2VyIGV4Y2x1c2l2ZWx5IGJlIGhlbGQgYW5kIGRpc3RyaWJ1dGVkIGF1dGhvcnMgb3BlbiB1cCBtb3JlIHNvdXJjZXMgb2YgZGlzdHJpYnV0aW9uIGFuZCB0aHVzIG1vcmUgb3Bwb3J0dW5pdHkgZm9yIHByb2ZpdCBvbiB0aGVpciB3b3JrLiBBdXRob3JzIGhhdmUgdGhlIGNvbWZvcnQgb2Yga25vdyB0aGF0IHRoZXkgYXJlIGVudGl0bGVkIHRvIGEgcGVyY2VudGFnZSBvZiBhbnkgcHJvZml0IG1hZGUgaW4gcGFydCBieSBjb250cmlidXRpb24gb2YgdGhlaXIgY29weXJpZ2h0ZWQgbWF0ZXJpYWwgYW5kIGFzIHN1Y2ggaGF2ZSBhIGxlZ2FsIGNoYW5uZWwgdG8gZW5mb3JjZSB0aGF0IHJpZ2h0Lg0KDQojIyMgQmVuZWZpdHMgdG8gZWR1Y2F0aW9uDQoNCkVkdWNhdG9ycyBubyBsb25nZXIgaGF2ZSB0byB3b3JyeSBhYm91dCBmaW5kaW5nIG1hdGVyaWFsIGZvciB0aGVpciBjdXJyaWN1bHVtIHRoYXQgZml0cyBhIGJ1ZGdldC4gQW55IG1hdGVyaWFsIGNhbiBiZSBvYnRhaW5lZCBieSB0aGUgaW5zdHJ1Y3RvciBhbmQgbWFkZSBhdmFpbGFibGUgdG8gdGhlIHN0dWRlbnRzLiBFaXRoZXIgYnkgbWFraW5nIGl0IGF2YWlsYWJsZSBvbiB0aGUgY291cnNlIGhvbWUgcGFnZSwgb3IgcGFzc2luZyBvdXQgZmxpZXJzIGR1cmluZyBjbGFzcy4gRWR1Y2F0b3JzIGFyZSBhbHNvIGZyZWUgdG8gbWFrZSBhIHByb2ZpdCBieSBjb21wcmlzaW5nIHRoZXJlIG93biBjb21wZW5kaXVtIG9mIHdvcmtzIGZvciB0aGUgY291cnNlIGN1cnJpY3VsdW0gdGhhdCBzdHVkZW50cyBtdXN0IHB1cmNoYXNlIGZyb20gdGhlIGJvb2sgc3RvcmUgKGFzIGlzIGRvbmUgYWxyZWFkeSkgd2l0aCB0aGUgc2ltcGxlIHN0aXB1bGF0aW9uIHRoYXQgdGhlIHJlZ3VsYXRlZCBwZXJjZW50YWdlIG9mIHRoZSBwcmljZSBnbyB0byB0aGUgYXV0aG9ycyBvZiB0aGUgdGhlIG1hdGVyaWFsIGZlYXR1cmVkIGluIHRoZSBjb2xsZWN0aW9uLg0KIyMjIEJlbmVmaXRzIGZvciBidXNpbmVzcyAoU21hbGwgYW5kIExhcmdlKQ0KDQpCZWluZyBhcyBubyBwZXJzb24gb3IgY29tcGFueSBjYW4gb2J0YWluIGV4Y2x1c2l2ZSBkaXN0cmlidXRpb24gcmlnaHRzLCBhcyBhIGNvbXBhbnkgeW91IGhhdmUgdGhlIG9wcG9ydHVuaXR5IHRvIG9idGFpbiBhbmQgZGlzdHJpYnV0ZSBjb3B5cmlnaHRlZCBtYXRlcmlhbCB0aGF0IGlzIGRvaW5nIHdlbGwgaW4gYSBkZXNpcmUgdG8gam9pbiBpbiBvbiBwcm9maXRpbmcgZnJvbSBzYWlkIHdvcmsuDQoNCkxhcmdlIGNvbXBhbmllcyBoYXZlIHRoZSBiZW5lZml0IG9mIGhhdmluZyBhIGJhcmdhaW5pbmcgY2hpcCB3aXRoIHRoZSBhdXRob3IgdG8gYWxsb3cgdGhlbSB0byBkaXN0cmlidXRlIGNvcHlyaWdodGVkIHdvcmsgYXQgcmVkdWNlZCBkaXN0cmlidXRpb24gcGVyY2VudGFnZSBieSBvZmZlcmluZyBoaWdobHkgYXZhaWxhYmxlIGRpc3RyaWJ1dGlvbi4gKElFIFNlbGwgYSBsb3QsIGZvciBhIGxpdHRsZSkuDQoNClNtYWxsIGNvbXBhbmllcyBoYXZlIHRoZSBiZW5lZml0IG9mIGNvbXBldGluZyB3aXRoIGxhcmdlIGNvbXBhbmllcyBieSBjYXBpdGFsaXppbmcgb24gdGhlIGNyZWF0aXZlIGZyZWVkb20gb2YgdGhlIGRpc3RyaWJ1dGlvbiBtb2RlbC4gRm9yIGV4YW1wbGUsIGNyZWF0aW5nIHN0YXJ0IHVwIHdlYiBzaXRlcyB3aXRoIHN1YnNjcmliZXIgZG93bmxvYWRhYmxlIGNvbnRlbnQuIFNpbmNlIGNvcHlyaWdodGVkIG1hdGVyaWFsIGRvZXNu4oCZdCBoYXZlIGEgc2V0IGluIHN0b25lIGJhc2UgcHJpY2UsIHRoZXkgY2FuIGNob29zZSB0byBvZmZlciBhcyBsaXR0bGUgb3IgYXMgbXVjaCBjb250ZW50IHZpYSBzdWJzY3JpcHRpb24gb3IgcGF5IHBlciBkb3dubG9hZCB0byBjcmVhdGUgYSBjb21wZXRpdGl2ZSBwcmljaW5nIG1vZGVsIGFnYWluc3QgbGFyZ2UgcGh5c2ljYWwgbWVkaWEgZGlzdHJpYnV0aW9uIGNvbXBhbmllcy4NCg0KIyMjIEluZGl2aWR1YWwgdXNhZ2UgYmVuZWZpdHMNCg0KQmVjYXVzZSBtb25ldGFyeSBpc3N1ZXMgb25seSBjb21lIGludG8gcGxheSBvbiBwcm9maXRpbmcgb2ZmIG9mIGRpc3RyaWJ1dGVkIG1hdGVyaWFsLCBvYnRhaW5pbmcgbWF0ZXJpYWwgaXMgYSBsb3Qgc2ltcGxlci4gRm9yIG9uZSwgZHVlIHRvIHRoZSBjb21wZXRpdGl2ZSBuYXR1cmUgb2YgY2FwaXRhbGlzdGljIG1hcmtldHMsIHlvdeKAmXJlIGdvaW5nIHRvIGZpbmQgbWF0ZXJpYWwgcHJvdmlkZWQgY2hlYXBlciBhbmQgZmFyIG1vcmUgZWFzaWVyIHRvIG9idGFpbi4NCg0KRHVlIHRvIHRoZSBuYXR1cmUgb2YgdGhlIGRpc3RyaWJ1dGlvbiBsaWNlbnNlLCBhbGwgbWF0ZXJpYWwgaXMgcG90ZW50aWFsbHkgZnJlZWx5IGF2YWlsYWJsZS4gT25seSBhIHNpbmdsZSBwZXJzb24sIHBvc3NpYmx5IHN0YXJ0aW5nIHdpdGggdGhlIGF1dGhvciBoaW1zZWxmLCBpcyBuZWVkZWQgdG8gc2VlZCB0aGUgaW5pdGlhbCBkaXN0cmlidXRpb24gb2YgbWF0ZXJpYWwgZm9yIGZyZWUuIE9uY2UgeW91IChvciBhbnkgcGVyc29uKSBnZXRzIGEgaG9sZCBvZiBjb3B5cmlnaHRlZCBtYXRlcmlhbCAoZWl0aGVyIGJ5IHBheWluZyBmb3IgaXQgb3IgYnkgb2J0YWluaW5nIGl0IGZvciBmcmVlKSB5b3UgYXJlIGZyZWUgdG8gcGFzcyB0aGUgbWF0ZXJpYWwgb24gdG8gYXMgbWFueSBvciBhcyBmZXcgcGVvcGxlIGFzIHlvdSB3YW50IChlaXRoZXIgZm9yIGZyZWUgb3IgZm9yIGEgZmVlIFtzbyBsb25nIGFzIHlvdSBwYXkgdGhlIGF1dGhvciBhIHBlcmNlbnRhZ2Ugb2YgdGhlIHByb2ZpdF0pLiBBIHNpdGUgbGlrZSBwaXJhdGUgYmF5ICh0aGF0IGlzIE5PVCBhZGQgc3VwcG9ydGVkLCBvciBzdWJzY3JpcHRpb24gc3VwcG9ydGVkLCBvciBtb25leSBpbnZvbHZlZCkgaXMgdG90YWxseSBsZWdpdC4gUGlyYXRlIGJheSBpdHNlbGYgYmVjb21lcyBsZWdpdCBzaW1wbHkgYnkgcGF5aW5nIHRoZSBhdXRob3JzIG9mIHRoZSBjb250ZW50IGRpc3RyaWJ1dGVkIGJ5IGl0cyBzaXRlIGEgcGVyY2VudGFnZSBvZiBhZCByZXZlbnVlLg0KDQpUaGUgb25seSBpc3N1ZSBoZXJlIGlzIGRldGVybWluaW5nIHdoYXQgcGVyY2VudGFnZSBvZiBkaXN0cmlidXRpb24gYW55IG1hdGVyaWFsIHJlcHJlc2VudHMsIGhvdyBtdWNoIHRvdGFsIHJldmVudWUgd2FzIGdlbmVyYXRlZCBhbmQgcGFzc2luZyBmb3J3YXJkIHRoZSBhdXRob3LigJlzIHJveWFsdHkgcGVyY2VudGFnZS4NCg0KIyMjIEV4YW1wbGVzDQoNCllvdSByZWxlYXNlIGEgY29tcGlsYXRpb24gYWxidW0gb2YgMTAgc29uZ3MgYnkgMTAgZGlmZmVyZW50IGFydGlzdHMgYXQgJDEwMCBkb2xsYXJzLiBSZWdhcmRsZXNzIHdoYXQgdGhlIGNvc3Qgb2YgcHJvZHVjaW5nIHRoZSBhbGJ1bSBpcywgeW91IGFyZSBzZWxsaW5nIGl0IGZvciAkMTAwIGRvbGxhcnMuICQxMDAvMTAgPSAkMTAgcGVyIGFydGlzdCBmb3IgcmV2ZW51ZSBiYXNlLiBNdWx0aXBsaWVkIGJ5IHRoZSBkaXN0cmlidXRpb24gcm95YWx0eSBwZXJjZW50YWdlIG9mIDI1JSAsICQxMCAqIC4yNSA9ICQyLjUwLiBFYWNoIGFydGlzdCBpcyBlbnRpdGxlZCB0byAkMi41MCBmb3IgZWFjaCBhbGJ1bSBzb2xkLiBWYXJpYXRpb25zIG9mIHRoaXMgZXhhbXBsZSBpbnZvbHZlIGEgc2luZ2xlIGFydGlzdCBmb3IgbW9yZSB0aGFuIG9uZSBzb25nLCBwbHVzIGNvbnRyYWN0dWFsIHN0aXB1bGF0aW9ucyByZWR1Y2luZyB0aGUgZGlzdHJpYnV0aW9uIHJveWFsdHkgcGVyY2VudGFnZS4NCg=="
  },
  {
    "title": "Out-of-the-Tar-Pit",
    "day": "07",
    "month": "05",
    "year": "2014",
    "date": "2014-05-07",
    "path": "/posts/2014/05/07/Out-of-the-Tar-Pit",
    "content": "I091dCBvZiB0aGUgVGFyIFBpdAoKRm91bmQgYSBncmVhdCBwYXBlcjogW091dCBvZiB0aGUgdGFycGl0XShodHRwczovL2dpdGh1Yi5jb20vcGFwZXJzLXdlLWxvdmUvcGFwZXJzLXdlLWxvdmUvYmxvYi9tYXN0ZXIvZGVzaWduL291dC1vZi10aGUtdGFyLXBpdC5wZGYpLgoKX091dCBvZiB0aGUgVGFyIFBpdF8gdGFsa3MgYWJvdXQgdGhlIHNvdXJjZXMgb2YgY29tcGxleGl0eSBpbiBzb2Z0d2FyZSBkZXZlbG9wbWVudC4gSXQgcmVkZWZpbmVzIGNvbXBsZXhpdHkgaW1idWVkIGluIHRoZSBkb21haW4gcHJvYmxlbSAoKmVzc2VudGlhbCBjb21wbGV4aXR5KikgYW5kIGNvbXBsZXhpdHkgdGhhdCBhcmlzZXMgZnJvbSBpbXBsZW1lbnRhdGlvbiwgcGVyZm9ybWFuY2Ugb3Igb3RoZXIgY29uc3RyYWludHMgKCphY2NpZGVudGFsIGNvbXBsZXhpdHkqKS4gIFRoZW4gZ29lcyBvbiB0byBkZXNjcmliZSBzb21lIHNvdXJjZXMgb2YgYWNjaWRlbnRhbCBjb21wbGV4aXR5IGFuZCBvZmZlcnMgbWVhbnMgZm9yIGhvdyBiZXN0IHRvIGlzb2xhdGUgYWNjaWRlbnRhbCBjb21wbGV4aXR5IGZyb20gdGhlIHN5c3RlbS4KCgoKS2V5IFRha2Vhd2F5czoKCiogVGhlcmUgYXJlIHR3byBraW5kcyBvZiBjb21wbGV4aXR5IGluIHNvZnR3YXJlIGRldmVsb3BtZW50OiAqKmFjY2lkZW50YWwgY29tcGxleGl0eSoqIGFuZCAqKmVzc2VudGlhbCBjb21wbGV4aXR5KiouCiogKipFc3NlbnRpYWwgQ29tcGxleGl0eSoqIGlzIHRoZSBjb21wbGV4aXR5IGluaGVyaXQgaW4gdGhlIHByb2JsZW0gc3BhY2UuCiogKipBY2NpZGVudGFsIENvbXBsZXhpdHkqKiBpcyB0aGUgY29tcGxleGl0eSB0aGF0IGFyaXNlIGZyb20gaW1wbGVtZW50YXRpb24sIHBlcmZvcm1hbmNlIGFuZCBvdGhlciBjb25zdHJhaW50cwoqIEF2b2lkIGFjY2lkZW50YWwgY29tcGxleGl0eSB3aGVyZSBwb3NzaWJsZS4KKiBTZXBhcmF0ZSBlc3NlbnRpYWwgY29tcGxleGl0eSAK"
  },
  {
    "title": "A-new-blogging-platform",
    "day": "30",
    "month": "11",
    "year": "2015",
    "date": "2015-11-30",
    "path": "/posts/2015/11/30/A-new-blogging-platform",
    "content": "I0EgbmV3IGJsb2dnaW5nIHBsYXRmb3JtCgpTbywgYGplcmVteWdpYmVyc29uLmNvbWAgaGFzIGJlZW4gZG93biBmb3IgYSB3aGlsZSwgc2luY2UgSSBhY2NpZGVudGFsbHkgY2FuY2VsZWQgaXRzJyBob3N0aW5nIGFjY291bnQuIA0KDQpJIGZpbmFsbHkgZ290IGFyb3VuZCB0byBzdGFuZGluZyBzb21ldGhpbmcgYmFjayB1cCBpbiBpdHMgcGxhY2UuIFdoYXQgeW91IHNlZSBub3cgaXMgYSBuZXcgYmxvZ2dpbmcgcGxhdGZvcm0gd3JpdHRlbiBmcm9tIHNjcmF0Y2ggd2l0aCBTbGltIGZyYW1ld29yayAoUkMgMykuIA0KDQpOb3cgSSBkb24ndCBoYXZlIGFuIGV4Y3VzZSBmb3Igbm90IGJsb2dnaW5nLiANCg0KSSdsbCBmaWxsIHNvbWUgY29udGVudCBieSB0YWxraW5nIGFib3V0IHdoYXQgSSBsZWFybmVkIHdpdGggdGhpcyBsaXR0bGUgZXhlcmNpc2UuIA0KDQoqU3BvaWxlcjogbWljcm8tZnJhbWV3b3JrcyBhcmUgbmVhdCo="
  },
  {
    "title": "Using-DBunit-with-Doctrine-ORM",
    "day": "26",
    "month": "12",
    "year": "2015",
    "date": "2015-12-26",
    "path": "/posts/2015/12/26/Using-DBunit-with-Doctrine-ORM",
    "content": ""
  },
  {
    "title": "Doctrine-ORM---Here-be-dragons",
    "day": "15",
    "month": "02",
    "year": "2016",
    "date": "2016-02-15",
    "path": "/posts/2016/02/15/Doctrine-ORM---Here-be-dragons",
    "content": "I0RvY3RyaW5lL09STSAtIEhlcmUgYmUgZHJhZ29ucwoKRG9jdHJpbmUgaXMgb25lIG9mIHRoZSBtYW55IFBIUCBwYWNrYWdlIEkndmUgdGFrZW4gZm9yIGdyYW50ZWQgb3ZlciB0aGUgbGFzdCB5ZWFyLiBJJ3ZlIGNvdW50ZWQgaXQgYXMgYSBzb2xpZCBhbmQgcmVsaWFibGUgYWJzdHJhY3Rpb24gbGF5ZXIgZm9yIG15IHBlcnNpc3RlbmNlLiBJJ20gbm93IGZpbmFsbHkgZGlzaWxsdXNpb25lZCB0byB0aGUgbm90aW9uIG9mIGl0IGJlaW5nIGluZmFsbGlibGUuIFRoYXQncyBub3Qgc2F5IHRoYXQgSSBhY3R1YWxseSB0aG91Z2h0IGl0IHdhcyBidWcgZnJlZSBpbiB0aGUgZmlyc3QgcGxhY2UgYnV0IEkgd2FzIGRvaW5nIGEgZGFybiBmaW5lIGpvYiBvZiBub3QgdGhpbmtpbmcgYWJvdXQgaXRzIGJ1Z3MgYW5kIGZhaWx1cmVzIC0tIHJlYWxseSBqdXN0IGF2b2lkaW5nIHRoZSB0b3BpYyBhcyBhIHdob2xlIHBlcmhhcHMgc3ViY29uc2Npb3VzbHkuIEkgZ3Vlc3MgaXQncyBhIHNpZGUgZWZmZWN0LCBvciBtYXliZSBldmVuIHRyYXAsIG9mIHVzaW5nIGV4aXN0aW5nIHBhY2thZ2VzIHRvIHNvbHZlIHRoZSBwZXNreSBpbXBsZW1lbnRhdGlvbiBkZXRhaWxzLiANCg0KSWYgeW91J3JlIGFjdHVhbGx5IHVzaW5nIERvY3RyaW5lMiwgaGF2ZSB5b3UgYWN0dWFsbHkgdGFrZW4gYSBsb29rIGF0IHRoZSBpc3N1ZSB0cmFja2VyIG9uIGdpdGh1Yj8gSSBoYWQgbm90IHByZXZpb3VzbHkgdGFrZW4gdGhlIHRpbWUgdG8gcmVhbGx5IGxvb2sgYXQgaXQsIGF0IHRoZSBudW1iZXIgb2YgaXNzdWVzIGFuZCB0aGUgdHlwZSBvZiBpc3N1ZXMgcHJldmlvdXNseS4gUHJlc2VudGx5LCB0aGVyZSBhcmUgYDQzNWAgb3BlbiBpc3N1ZXMgbWFya2VkIHdpdGggdGhlIGBCdWdgIGxhYmVsLiBUaGF0IGlzIG5vdCB0byBzYXkgdGhhdCBpdCBpcyBiYWQgc29mdHdhcmUgb3IgdGhhdCB0aGUgbWFpbnRhaW5lcnMgYXJlIGRvaW5nIGEgYmFkIGpvYiAocXVpdGUgdGhlIGNvbnRyYXJ5IGFzIHRoZXJlIGFyZSBgMjI0NGAgY2xvc2VkIGJ1ZyBpc3N1ZXMpLiBCdXQgaXQgc3RhbmRzIGFzIGEgcmVtaW5kZXIgdGhhdCB0aGUgcGFja2FnZSBoYXMgYSBtYWduaXR1ZGUgb2YgaXNzdWVzLiANCg0KV2hhdCBpcyBpbnRlcmVzdGluZywgaXMgdGhhdCB0aGUgcGFja2FnZSB3b3JrcyBmb3IgbW9zdCBvZiB0aGUgImNvcmUiIGZ1bmN0aW9uYWxpdHkuIFRoaW5ncyBsaWtlIHBlcnNpc3RlbmNlIG9mIGVudGl0aWVzLCBhc3NvY2lhdGlvbnMgYW5kIHRoZSBsaWtlLiBJdCBpcyB0aGUgZXh0cmFuZW91cyBmZWF0dXJlcyB3aGVuIHlvdSBzdGFydCBnZXR0aW5nIGludG8gdHJvdWJsZWQgd2F0ZXJzLiANCg0KTGFzdCB3ZWVrLCBJIHdhbnRlZCB0byB1dGlsaXplIGNvbGxlY3Rpb25zIHcvIGNyaXRlcmlhIGZvciBmaWx0ZXJpbmcgYXNzb2NpYXRpb25zLiBTcGVjaWZpY2FsbHksIEkgaGFkIGFuIFRoZXJhcGlzdCBlbnRpdHkgd2l0aCBhIHVuaWRpcmVjdGlvbmFsIG1hbnktdG8tbWFueSBhc3NvY2lhdGlvbiB0byBmYWNpbGl0aWVzIGFuZCBJIHdhbnRlZCB0byBnZXQgYSBsaXN0IG9mIHRob3NlIGZhY2lsaXRpZXMgbWF0Y2hpbmcgYSBzcGVjaWZpZWQgbmFtZS4gVGhlICJ0eXBpY2FsIiBzb2x1dGlvbiB0aGF0IHdvdWxkIHByb2JhYmx5IGJlIHN1Z2dlc3RlZCBvbiBzdGFjayBvdmVyZmxvdyBtaWdodCBiZSB0byB3cml0ZSBhIGN1c3RvbSByZXBvc2l0b3J5IG1ldGhvZCB0byBmZXRjaCB0aGUgZmFjaWxpdHkgdXNpbmcgYSBEUUwgc3RhdGVtZW50IGFuZCByZXR1cm5pbmcgdGhlIHJlc3VsdCwgbWF5YmUgdXRpbGl6aW5nIGEgcGFnaW5hdG9yLiBCdXQgZG9jdHJpbmUgYm9hc3RzIGEgZmVhdHVyZSB3aGVyZSBpZiB5b3UgZGVmaW5lIHlvdXIgYXNzb2NpYXRpb25zIGFzIGBleHRyYS1sYXp5YCB0aGVuIHdoZW4geW91IGFjY2VzcyB0aGUgYXNzb2NpYXRpb24gcHJvcGVydHkgeW91J2xsIHJlY2VpdmUgYSBwcm94eSBjb2xsZWN0aW9uIHRoYXQgd2FpdHMgdW50aWwgeW91IGl0ZXJhdGUgb3ZlciBpdCB0byBmZXRjaCB0aGUgZGF0YSBmcm9tIHRoZSBkYXRhYmFzZS4gQWRkaXRpb25hbGx5LCB0aGUgY29sbGVjdGlvbiBzdXBwb3NlZGx5IHN1cHBvcnRzIGZpbHRlcmluZyBieSBwcm92aWRpbmcgYSBgQ3JpdGVyaWFgIG9iamVjdCB0aGF0IGRlZmluZXMgY29uZGl0aW9uYWxzL29yZGVyaW5ncy4gVW5mb3J0dW5hdGVseSB0aHJvdWdoIHRyaWFsIGFuIGVycm9yIEkgZGlzY292ZXJlZCB0aGF0IHRoZSBgTWFueVRvTWFueVBlcnNpc3RlcmAgd2hpY2ggaXMgcmVzcG9uc2libGUgZm9yIHByb3ZpZGluZyB0aGlzIGZ1bmN0aW9uYWxpdHkgc3VmZmVycyBmcm9tIDUgc2VwYXJhdGUsIGNvbXBvdW5kaW5nIGJ1Z3MuDQoNCiAgKiBDb2xsZWN0aW9uIG9mIGEgbm9uLW93bmluZyBzaWRlICBhc3NvY2lhdGlvbiB3YXMgYnJva2VuDQogICogTGltaXQvb2Zmc2V0IG9mIENyaXRlcmlhIHdlcmUgYmVpbmcgaWdub3JlZA0KICAqIE9yZGVyQnkgb2YgY3JpdGVyaWEgd2FzIGJlaW5nIGlnbm9yZWQNCiAgKiBmaWVsZCB0byBjb2x1bW4gbmFtZSBtYXBwaW5ncyB3ZXJlIGJlaW5nIGlnbm9yZWQNCiAgKiBhbGwgdGhlIHdoZXJlIGNvbmRpdGlvbmFscyBvZiB0aGUgY3JpdGVyaWEgd2VyZSBiZWluZyB0cmVhdGVkIGFzIGBFcXVhbCBUbyBvcGVyYXRpb25gIG1lYW5pbmcgaWYgeW91ciB3aGVyZSBjbGF1c2Ugd2FzICJjb3VudCA+IDMiIGl0IHdhcyB0cmVhdGVkIGFzICJjb3VudCA9IDMiLg0KICANCldoaWxlIG5vdCBhIGJ1ZywgdGhlIGltcGxlbWVudGF0aW9uIGRldGFpbCBvZiB0aGUgYG1hdGNoaW5nYCBtZXRob2QgdGhhdCBhcHBsaWVzIHRvIHRoZSBQZXJzaXN0ZW50Q29sbGVjdGlvbiBhbmQgcmV0dXJucyBhIG5ldyAiZmlsdGVyZWQiIEFycmF5Q29sbGVjdGlvbiB3aXRoIHRoZSBlbnRpcmUgcmVzdWx0IGh5ZHJhdGVkIGluIG1lbW9yeS4gSSdkIHByZWZlciBpZiBpdCByZXR1cm5lZCBhbm90aGVyIFBlcnNpc3RlbnRDb2xsZWN0aW9uIHRoYXQgZGlkbid0IGh5ZHJhdGUgdW50aWwgeW91IGl0ZXJhdGVkIG92ZXIgaXQuDQoNCkN1cnJlbnRseSwgdGhlcmUgYXJlIHB1bGwgcmVxdWVzdHMgdG8gYWRkcmVzcyB0aGUgZmlyc3QgZm91ciBvZiB0aGUgYWJvdmUgYnVnIGxpc3QgLS0gc28gdGhleSB3aWxsIGxpa2VseSBiZSBhZGRyZXNzZWQgZXZlbnR1YWxseS4gQnV0IGZvciByaWdodCBub3csIGl0IG1lYW5zIHRoZSBjcml0ZXJpYSBzb2x1dGlvbiBpcyBqdXN0IG9mZiB0aGUgdGFibGUuIA0KDQpBdCB0aGUgdmVyeSBsZWFzdCwgSSd2ZSBub3cgZ290IGV4dHJhIG1vdGl2YXRpb24gdG8gY29udHJpYnV0ZSBiYWNrIHRvIG9wZW4gc291cmNlIHNvZnR3YXJlIGFzIHRoaXMgaXMgYSBwYWNrYWdlIEkgbGlrZSB1c2luZyBhbmQgYSBmZWF0dXJlIEknZCByZWFsbHkgbGlrZSB0byBtYWtlIHVzZSBvZi4gU28gSSdsbCBwcm9iYWJseSBwaWNrIHVwIHRoZSBoYW1tZXIgYW5kIHNlZSBpZiBJIGNhbiBwYXRjaCB1cCBzb21lIG9mIHRoaXMgZnVja2luZXNzIHdpdGggYSBwdWxsIHJlcXVlc3Qgb2YgbXkgb3duLg0K"
  },
  {
    "title": "Creating-a-jekyll-inspired-react-powered-static-site-for-my-homepage",
    "day": "05",
    "month": "01",
    "year": "2022",
    "date": "2022-01-05",
    "path": "/posts/2022/01/05/Creating-a-jekyll-inspired-react-powered-static-site-for-my-homepage",
    "content": "IyBDcmVhdGluZyBhIGpla3lsbCBpbnNwaXJlZCByZWFjdCBwb3dlcmVkIHN0YXRpYyBzaXRlIGZvciBteSBob21lcGFnZQpTbyBpdCdzIHRoYXQgdGltZSBhZ2Fpbiwgd2hlcmUgSSdtIHNob3BwaW5nIGFyb3VuZCBmb3IgbXkgbmV4dCBjYXJlZXIgb3Bwb3J0dW5pdHkgYW5kIHJlYWxpemUgdGhhdCB0aHJvdWdoIHRoZSB5ZWFycyBvZiBnYWluZnVsIGVtcGxveW1lbnQgSSd2ZSBuZWdsZWN0ZWQgbXkgcGVyc29uYWwgc2l0ZS4KCiMjIyBBc2lkZQpJIHRoaW5rIHRoZSBtYWluIHJlYXNvbiBJIG5lZ2xlY3QgYmxvZ2dpbmcsIGlzIHRoYXQgdGhlIHdvcmtmbG93IGZvciBibG9nZ2luZyBoYXMgbmV2ZXIgcXVpdGUgbWV0IG15IHNhdGlzZmFjdGlvbi4gR29pbmcgdG8gYSBzaXRlLCBsb2dnaW5nIGluLCAiTWFuYWdpbmciIGNvbnRlbnQgYnkgZHJhZnRpbmcgYW5kIHB1Ymxpc2hpbmcgcG9zdHMuIApJdCBqdXN0IGRvZXNuJ3QgbWF0Y2ggbXkgZGF5LXRvLWRheSBkZXZlbG9wZXIgd29ya2Zsb3cuIE9uIGEgYnJhbmNoLCBtYWtlIHNvbWUgY2hhbmdlcywgY29tbWl0IHNvbWUgY2hhbmdlcy4gQWxzbywgSSByZWFsbHkgbGlrZSB0aGUgaWRlYSBvZgp1c2luZyBtYXJrZG93biBhcyBteSB0ZXh0IG1hcmt1cCBsYW5ndWFnZS4gCgpKZWt5bGxyYiB3YXMgdGhlIGZpcnN0IHN0YXRpYyBzaXRlIGdlbmVyYXRvciB0aGF0IEkgcmFuIGludG8gYSBmZXcgeWVhcnMgYWdvIHRoYXQgc2VlbWVkIHRvIGNvbWUgcHJldHR5IGNsb3NlLiBJIGxpa2VkIGhvdyBjb250ZW50IHdhcyBtYW5hZ2VkIGFzIGEgc2VyaWVzIG9mIG1hcmtkb3duIGZpbGVzIGFuZCB0aGUgY29udGVudAp3YXMgbWFuYWdlZCBieSByZWZsZWN0aW5nIG9uIHRoZSBmaWxlbmFtZSB0byBkZXRlcm1pbmUgZGF0ZSBhbmQgdGl0bGUgaW5mb3JtYXRpb24uIEV2ZW4gYmV0dGVyLCBiZWNhdXNlIGl0IGNvbXBpbGVkIHRvIGEgc3RhdGljIHNpdGUsIGl0IHdhcyBpZGVhbCBmb3IgYmVpbmcgaG9zdGVkIGJ5IHRoZSBuZXcgR2l0SHViIFBhZ2VzIGZlYXR1cmUuCgpJIGRpZCBleHBlcmltZW50IHdpdGggdXNpbmcgaXQgZm9yIG15IHNpdGUgZWFybGllciwgYnV0IGRpZG4ndCBlbmQgdXAgdXNpbmcgaXQuIEkgdGhpbmsgdGhlIGxhc3QgcGllY2Ugb2YgdGhlIG1lY2hhbmlzbSwgaXMgdGhhdCBJIHdhbnRlZCBteSBzaXRlIHRvIGJlIHJ1biBvbiBzb21ldGhpbmcgSSBidWlsdCAtLSBldmVuIGlmIGl0IHdhc24ndCBhcHBhcmVudC4KSnVzdCBmZWx0IGxpa2UgdXNpbmcgYW4gZXhpc3RpbmcgYmxvZyBwbGF0Zm9ybSBvbiBteSBzaXRlIGRpZG4ndCByZWFsbHkgcmVwcmVzZW50IG15IGRldmVsb3BlciBuYXR1cmUuCgojIyMgQmFjayBvbiB0b3BpYwpJdCBmZWx0IG5lY2Vzc2FyeSB0byByZWZyZXNoIG15IHNpdGUgYW5kIHBvdGVudGlhbGx5IGFkZCBzb21lIG5ldyBjb250ZW50LiAKCkkgZGVjaWRlZCB0byB0cnkgZmluZCBvciBjcmVhdGUgYSB3b3JrZmxvdyB0aGF0IGNoZWNrIGFsbCBteSB3aXNobGlzdCBib3hlcy4KLSBbIF0gYSB0aGluZyBJIG1hZGUKLSBbIF0gY29udGVudCBpcyBzaW1wbGUgdGV4dCB3LyBtYXJrZG93biBmbGF2b3JpbmcKLSBbIF0gYSB3b3JrZmxvdyBJIGVuam95ZWQKCkkga25ldyB0aGF0IEkgd2FudGVkIG15IHdvcmtmbG93IHRvIHJlc2VtYmxlIGBtYWtlIGNoYW5nZXMgLT4gZ2l0IGNvbW1pdCAtPiBnaXQgcHVzaGAsIGFuZCBoYWQgYW4gaW5rbGluZyB0aGF0IEknZCBsaWtlIHRvIHVzZSBHaXRIdWIgcGFnZXMgdG8gcmVuZGVyIHRoZSBzaXRlLgpCdXQgSSBhbHNvIHdhbnRlZCByZWFjdCB0byBiZSBpbnZvbHZlZCwgYmVjYXVzZSBpdHMgZnVuLiBTbyBJIHN0YXJ0ZWQgcmVzZWFyY2hpbmcgdXNpbmcgcmVhY3Qgdy8gZ2l0aHViIHBhZ2VzLgpSYXRoZXIgcXVpY2tseSwgSSBzdHVtYmxlZCBhY3Jvc3MgYSBwcm9qZWN0IHRoYXQgc3BlY2lmaWNhbGx5IGhhbmRsZWQgdGhlIHdvcmtmbG93IG9mIGJ1aWxkaW5nIHlvdXIgcmVhY3QgYXBwLCBhbmQgcHVibGlzaGluZyB0aGUgYnVpbGQgYXJ0aWZhY3RzIHRvIGEgYnJhbmNoIHRoYXQgR2l0SHViIHBhZ2VzIHJlbmRlcmVkLgoKQnV0IHRoZSBuZXh0IGJpdCwgd2FzIHRoYXQgSSBzdGlsbCB3YW50ZWQgdG8gbWFrZSBjcmVhdGluZyBuZXcgcGFnZXMgdG8gYmUgYSBzaW1wbGUgYXMgYXV0aG9yaW5nIG1hcmtkb3duIGZpbGVzLgoKTmVhdGx5LCB0aGUgc29sdXRpb24gdG8gdGhlIGFib3ZlIHdpbGwgc2VydmUgdHdvIGNoZWNrbWFya3MuIENvbnRlbnQgaXMgdGV4dCB3LyBtYXJrZG93biBmbGF2b3JpbmcgYW5kIHNvbHZpbmcgaXQgaXMgZW5vdWdoIHRvIHF1YWxpZnkgYmVpbmcgImEgdGhpbmcgSSBtYWRlIi4KCiMjIyBTb2x1dGlvbiBvdmVydmlldwpCb3Jyb3dpbmcgZnJvbSBob3cgSmVreWxscmIgd29ya2VkLCBJJ2xsIGNyZWF0ZSBhIHNjcmlwdCB0aGF0IHdpbGwgaXRlcmF0ZSBhIGRpcmVjdG9yeSBjb2xsZWN0aW5nIGAubWRgIGZpbGVzLiBFYWNoIGZpbGUgd2lsbCB1c2UgYSBuYW1pbmcgY29udmVudGlvbiBvZgpgWVlZWS1NTS1ERC1UaXRsZS5tZGAuIFRoZSBzY3JpcHQgd2lsbCBjb21waWxlIGEgamF2YXNjcmlwdCBmaWxlIHRoYXQgZXhwb3J0cyBhbiBvYmplY3QgcmVwcmVzZW50YXRpb24gb2YgdGhlIHBvc3RzLiBGcm9tIHRoZXJlLCB1c2luZyBgcmVhY3Qtcm91dGVyYCBJJ2xsIHByb3ZpZGUgcm91dGVzIGZvciByZW5kZXJpbmcgbGlzdHMgb2YgcG9zdHMsIGFuZCB0aGUgcG9zdCBjb250ZW50LiAKVGhlIHBvc3QgY29udGVudCB3aWxsIGJlIHJlbmRlcmVkIGJ5IGEgY29tcG9uZW50IHRoYXQgdGFrZXMgbWFya2Rvd24gdGV4dCBhbmQgcmVuZGVycyBhcyBIVE1MIGRvbS4gCgpCZWNhdXNlIHJlbWVtYmVyaW5nIGNvbnZlbnRpb25zIGlzIGhhcmQsIEknbGwgYWRkIGEgc2ltcGxlIG5wbSBzY3JpcHQgYGFkZC1wb3N0YCB0aGF0IEkgY2FuIHJ1biB0byBnZW5lcmF0ZSBhIG5ldyBtYXJrZG93biBmaWxlIGZvciBtZSB3LyB0aGUgY29ycmVjdCBuYW1pbmcgY29udmVudGlvbiBhbmQgaW4gdGhlIGNvcnJlY3QgZm9sZGVyLgoKVGhlbiB1c2luZyBHaXRIdWIgYWN0aW9ucyBhbmQgdGhlIHJlYWN0LWdoLXBhZ2VzIHRvb2wsIG9uIG1lcmdlcyB0byBtYXN0ZXIsIHRoZSBzaXRlIHdpbGwgYmUgY29tcGlsZWQgYW5kIHB1Ymxpc2hlZCBmb3IgR2l0SHViIHBhZ2VzIHJlbmRlcmluZy4KCkZvciBkZXRhaWxzLCBzZWUgdGhlIFtzb3VyY2Ugb2YgdGhpcyBzaXRlXSgpCgojIyMgRmVhdHVyZXMgClNvLCB0aGUgZmVhdHVyZXMgb2YgbXkgbmV3IHdlYnNpdGUgYXJlIGVzc2VudGlhbGx5OgoKKiBSZWFjdCBzaW5nbGUgcGFnZSBhcHAKKiBTaXRlIGNvbnRlbnQgaXMganVzdCBhIGNvbGxlY3Rpb24gb2YgbWFya2Rvd24gZmlsZXMKKiBteSAiYmxvZ2dpbmciIGZsb3cgaXM6CiAgICAxLiBgeWFybiBydW4gYWRkLXBvc3QgInNvbWV0aGluZyBpJ20gdGhpbmtpbmcgYWJvdXQgcmlnaHQgbm93ImAgLT4gY3JlYXRlcyBhIGZpbGUgaW4gYHNyYy9fcGFnZXNgIGxpa2UgYFlZWVktTU0tREQtc29tZXRoaW5nLWltLXRoaW5raW5nLWFib3V0LXJpZ2h0LW5vdy5tZGAKICAgIDIuIEkgZWRpdCBgc3JjL19wYWdlcy9ZWVlZLU1NLURELXNvbWV0aGluZy1pbS10aGlua2luZy1hYm91dC1yaWdodC1ub3cubWRgIGFuZCB3cml0ZSBteSB0aG91Z2h0cyBkb3duIHVzaW5nIE1hcmtkb3duLgogICAgMy4gYGdpdCBjb21taXQgLW0gImFkZGVkIGEgbmV3IHBvc3QiYCBhbmQgYGdpdCBwdXNoIG9yaWdpbiBtYXN0ZXJgCiAgICA0LiBHaXRIdWIgQWN0aW9uIHdpbGwgY29tcGlsZSAmJiBwdWJsaXNoIHRoZSBzdGF0aWMgc2l0ZQogICAgICAgICogcGFyc2UgX3Bvc3RzIGludG8gYSBqYXZhc2NyaXB0IGZpbGUgdGhhdCBpcyBpbmNsdWRlZCBieSB0aGUgcmVhY3QgYXBwCiAgICAgICAgKiBidWlsZCByZWFjdCBhcHAKICAgICAgICAqIGNvbW1pdCB0aGUgY2hhbmdlcyB0byBhIHRhcmdldCBgZ2gtcGFnZXNgIGJyYW5jaAogICAgNS4gR2l0SHViIHBhZ2VzIHJlbmRlcnMgdGhlIHJlcG9zaXRvcmllcyBgZ2gtcGFnZXNgIGJyYW5jaC4gVGhlIGBqZXJlbXlnaWJlcnNvbi5jb21gIGNuYW1lIHBvaW50cyB0byB0aGUgZ2l0aHViIHBhZ2VzIHVybC4KClRoaXMgc2VlbXMgcHJldHR5IGNsb3NlIHRvIG15IGlkZWFsIHdvcmtmbG93LiA="
  }
]